#!/bin/bash

# Generated by airline BashCompletionGenerator

containsElement () {
  # This function from http://stackoverflow.com/a/8574392/107591
  local e
  for e in "${@:2}"; do [[ "$e" == "$1" ]] && return 0; done
  return 1
}

function _complete_sendit_command_checkaddress() {
  # Get completion data
  COMPREPLY=()
  CURR_WORD=${COMP_WORDS[COMP_CWORD]}
  PREV_WORD=${COMP_WORDS[COMP_CWORD-1]}
  COMMANDS=$1

  FLAG_OPTS=""
  ARG_OPTS="--address --line --recipient -a --postcode --name --number"

  $( containsElement ${PREV_WORD} ${ARG_OPTS[@]} )
  SAW_ARG=$?
  if [[ ${SAW_ARG} -eq 0 ]]; then
    ARG_VALUES=
    ARG_GENERATED_VALUES=
    case ${PREV_WORD} in
      --recipient)
        COMPREPLY=( $(compgen -W "${ARG_VALUES} ${ARG_GENERATED_VALUES}" -- ${CURR_WORD}) )
        echo ${COMPREPLY[@]}
        return 0
        ;;
      -a|--address|--line)
        COMPREPLY=( $(compgen -W "${ARG_VALUES} ${ARG_GENERATED_VALUES}" -- ${CURR_WORD}) )
        echo ${COMPREPLY[@]}
        return 0
        ;;
      --postcode)
        COMPREPLY=( $(compgen -W "${ARG_VALUES} ${ARG_GENERATED_VALUES}" -- ${CURR_WORD}) )
        echo ${COMPREPLY[@]}
        return 0
        ;;
      --name)
        COMPREPLY=( $(compgen -W "${ARG_VALUES} ${ARG_GENERATED_VALUES}" -- ${CURR_WORD}) )
        echo ${COMPREPLY[@]}
        return 0
        ;;
      --number)
        COMPREPLY=( $(compgen -W "${ARG_VALUES} ${ARG_GENERATED_VALUES}" -- ${CURR_WORD}) )
        echo ${COMPREPLY[@]}
        return 0
        ;;
    esac
  fi

  ARGUMENTS=
  COMPREPLY=( $(compgen -W "${FLAG_OPTS} ${ARG_OPTS} ${ARGUMENTS}" -- ${CURR_WORD}) )
  echo ${COMPREPLY[@]}
  return 0
}

function _complete_sendit_command_checkpostcodes() {
  # Get completion data
  COMPREPLY=()
  CURR_WORD=${COMP_WORDS[COMP_CWORD]}
  PREV_WORD=${COMP_WORDS[COMP_CWORD-1]}
  COMMANDS=$1

  FLAG_OPTS=""
  ARG_OPTS=""

  ARGUMENTS=
  COMPREPLY=( $(compgen -W "${FLAG_OPTS} ${ARG_OPTS} ${ARGUMENTS}" -- ${CURR_WORD}) )
  echo ${COMPREPLY[@]}
  return 0
}

function _complete_sendit_command_send() {
  # Get completion data
  COMPREPLY=()
  CURR_WORD=${COMP_WORDS[COMP_CWORD]}
  PREV_WORD=${COMP_WORDS[COMP_CWORD-1]}
  COMMANDS=$1

  FLAG_OPTS=""
  ARG_OPTS="--address --height --line --recipient --width -s --weight -w --number --depth -a --service --postcode --name"

  $( containsElement ${PREV_WORD} ${ARG_OPTS[@]} )
  SAW_ARG=$?
  if [[ ${SAW_ARG} -eq 0 ]]; then
    ARG_VALUES=
    ARG_GENERATED_VALUES=
    case ${PREV_WORD} in
      --depth)
        COMPREPLY=( $(compgen -W "${ARG_VALUES} ${ARG_GENERATED_VALUES}" -- ${CURR_WORD}) )
        echo ${COMPREPLY[@]}
        return 0
        ;;
      --height)
        COMPREPLY=( $(compgen -W "${ARG_VALUES} ${ARG_GENERATED_VALUES}" -- ${CURR_WORD}) )
        echo ${COMPREPLY[@]}
        return 0
        ;;
      --recipient)
        COMPREPLY=( $(compgen -W "${ARG_VALUES} ${ARG_GENERATED_VALUES}" -- ${CURR_WORD}) )
        echo ${COMPREPLY[@]}
        return 0
        ;;
      -a|--address|--line)
        COMPREPLY=( $(compgen -W "${ARG_VALUES} ${ARG_GENERATED_VALUES}" -- ${CURR_WORD}) )
        echo ${COMPREPLY[@]}
        return 0
        ;;
      --width)
        COMPREPLY=( $(compgen -W "${ARG_VALUES} ${ARG_GENERATED_VALUES}" -- ${CURR_WORD}) )
        echo ${COMPREPLY[@]}
        return 0
        ;;
      --postcode)
        COMPREPLY=( $(compgen -W "${ARG_VALUES} ${ARG_GENERATED_VALUES}" -- ${CURR_WORD}) )
        echo ${COMPREPLY[@]}
        return 0
        ;;
      -s|--service)
        COMPREPLY=( $(compgen -W "${ARG_VALUES} ${ARG_GENERATED_VALUES}" -- ${CURR_WORD}) )
        echo ${COMPREPLY[@]}
        return 0
        ;;
      --name)
        COMPREPLY=( $(compgen -W "${ARG_VALUES} ${ARG_GENERATED_VALUES}" -- ${CURR_WORD}) )
        echo ${COMPREPLY[@]}
        return 0
        ;;
      -w|--weight)
        COMPREPLY=( $(compgen -W "${ARG_VALUES} ${ARG_GENERATED_VALUES}" -- ${CURR_WORD}) )
        echo ${COMPREPLY[@]}
        return 0
        ;;
      --number)
        COMPREPLY=( $(compgen -W "${ARG_VALUES} ${ARG_GENERATED_VALUES}" -- ${CURR_WORD}) )
        echo ${COMPREPLY[@]}
        return 0
        ;;
    esac
  fi

  ARGUMENTS=
  COMPREPLY=( $(compgen -W "${FLAG_OPTS} ${ARG_OPTS} ${ARGUMENTS}" -- ${CURR_WORD}) )
  echo ${COMPREPLY[@]}
  return 0
}

function _complete_sendit_command_price() {
  # Get completion data
  COMPREPLY=()
  CURR_WORD=${COMP_WORDS[COMP_CWORD]}
  PREV_WORD=${COMP_WORDS[COMP_CWORD-1]}
  COMMANDS=$1

  FLAG_OPTS=""
  ARG_OPTS="--depth --height --service --width -s --weight -w"

  $( containsElement ${PREV_WORD} ${ARG_OPTS[@]} )
  SAW_ARG=$?
  if [[ ${SAW_ARG} -eq 0 ]]; then
    ARG_VALUES=
    ARG_GENERATED_VALUES=
    case ${PREV_WORD} in
      --depth)
        COMPREPLY=( $(compgen -W "${ARG_VALUES} ${ARG_GENERATED_VALUES}" -- ${CURR_WORD}) )
        echo ${COMPREPLY[@]}
        return 0
        ;;
      --height)
        COMPREPLY=( $(compgen -W "${ARG_VALUES} ${ARG_GENERATED_VALUES}" -- ${CURR_WORD}) )
        echo ${COMPREPLY[@]}
        return 0
        ;;
      --width)
        COMPREPLY=( $(compgen -W "${ARG_VALUES} ${ARG_GENERATED_VALUES}" -- ${CURR_WORD}) )
        echo ${COMPREPLY[@]}
        return 0
        ;;
      -s|--service)
        COMPREPLY=( $(compgen -W "${ARG_VALUES} ${ARG_GENERATED_VALUES}" -- ${CURR_WORD}) )
        echo ${COMPREPLY[@]}
        return 0
        ;;
      -w|--weight)
        COMPREPLY=( $(compgen -W "${ARG_VALUES} ${ARG_GENERATED_VALUES}" -- ${CURR_WORD}) )
        echo ${COMPREPLY[@]}
        return 0
        ;;
    esac
  fi

  ARGUMENTS=
  COMPREPLY=( $(compgen -W "${FLAG_OPTS} ${ARG_OPTS} ${ARGUMENTS}" -- ${CURR_WORD}) )
  echo ${COMPREPLY[@]}
  return 0
}

function _complete_sendit_command_help() {
  # Get completion data
  COMPREPLY=()
  CURR_WORD=${COMP_WORDS[COMP_CWORD]}
  PREV_WORD=${COMP_WORDS[COMP_CWORD-1]}
  COMMANDS=$1

  FLAG_OPTS=""
  ARG_OPTS=""

  ARGUMENTS=
  COMPREPLY=( $(compgen -W "${FLAG_OPTS} ${ARG_OPTS} ${ARGUMENTS} ${COMMANDS}" -- ${CURR_WORD}) )
  echo ${COMPREPLY[@]}
  return 0
}

function _complete_sendit_command_generatecompletions() {
  # Get completion data
  COMPREPLY=()
  CURR_WORD=${COMP_WORDS[COMP_CWORD]}
  PREV_WORD=${COMP_WORDS[COMP_CWORD-1]}
  COMMANDS=$1

  FLAG_OPTS=""
  ARG_OPTS=""

  ARGUMENTS=
  COMPREPLY=( $(compgen -W "${FLAG_OPTS} ${ARG_OPTS} ${ARGUMENTS}" -- ${CURR_WORD}) )
  echo ${COMPREPLY[@]}
  return 0
}

function _complete_sendit() {
  # Get completion data
  CURR_WORD=${COMP_WORDS[COMP_CWORD]}
  PREV_WORD=${COMP_WORDS[COMP_CWORD-1]}
  CURR_CMD=
  if [[ ${COMP_CWORD} -ge 1 ]]; then
    CURR_CMD=${COMP_WORDS[1]}
  fi

  COMMANDS="check-address check-postcodes help generate-completions price send"
  if [[ ${COMP_CWORD} -eq 1 ]]; then
    COMPREPLY=( $(_complete_sendit_command_help "${COMMANDS}" ) )
    DEFAULT_COMMAND_COMPLETIONS=(${COMPREPLY[@]})
    COMPREPLY=()
    COMPREPLY=( $(compgen -W "${COMMANDS} ${DEFAULT_COMMAND_COMPLETIONS}" -- ${CURR_WORD}) )
    return 0
  fi

  case ${CURR_CMD} in 
    check-address)
      COMPREPLY=( $(_complete_sendit_command_checkaddress "${COMMANDS}" ) )
      return $?
      ;;
    check-postcodes)
      COMPREPLY=( $(_complete_sendit_command_checkpostcodes "${COMMANDS}" ) )
      return $?
      ;;
    send)
      COMPREPLY=( $(_complete_sendit_command_send "${COMMANDS}" ) )
      return $?
      ;;
    price)
      COMPREPLY=( $(_complete_sendit_command_price "${COMMANDS}" ) )
      return $?
      ;;
    help)
      COMPREPLY=( $(_complete_sendit_command_help "${COMMANDS}" ) )
      return $?
      ;;
    generate-completions)
      COMPREPLY=( $(_complete_sendit_command_generatecompletions "${COMMANDS}" ) )
      return $?
      ;;
  esac

}

complete -F _complete_sendit send-it